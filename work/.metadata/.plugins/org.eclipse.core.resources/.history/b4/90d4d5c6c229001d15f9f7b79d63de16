package com.exe.board.answer;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

import org.codehaus.groovy.runtime.dgmimpl.arrays.IntegerArrayGetAtMetaMethod;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.exe.board.question.Question;
import com.exe.board.question.QuestionService;

import lombok.RequiredArgsConstructor;

@RequestMapping("/answer")
@RequiredArgsConstructor
@Controller
public class AnswerController {
	
	private final QuestionService questionService;
	private final AnswerService answerService;
	
	@PostMapping("/create/{id}")
	public String createAnswer(Model model, @PathVariable Integer id, String content) {
		Question question = questionService.getQuestion(id);
		
		answerService.create(question, content);
		
		return String.format("redirect:/question/detail/%s", id);
	}
	
	public int[] solution(int[][] v) {
        int[] answer = {};
        Set<Integer> set = new HashSet<Integer>();
        Set<Integer> set2 = new HashSet<Integer>();
        
        
        for (int[] row : v) {
        	
        	checkDupl(set, row[0]);
        	checkDupl(set2, row[1]);
		}
        answer[0] = set[0];
        
        return answer;
    }
	
	void checkDupl(Set<Integer> set, int value) {
		if (!set.contains(value)) {
    		set.add(value);
		}
    	else {
    		set.remove(value);
    	}
	}
	
}
